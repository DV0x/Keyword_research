========================
CODE SNIPPETS
========================
TITLE: Get Search By Image SERP Completed Tasks Examples
DESCRIPTION: Code examples demonstrating how to call the 'Tasks Ready' endpoint to get completed task IDs. Includes examples for shell (curl), PHP, and Python.

SOURCE: https://docs.dataforseo.com/v3/serp/google/search_by_image/tasks_ready

LANGUAGE: shell
CODE:
```
# Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access 
login="login" 
password="password"
cred="$(printf ${login}:${password} | base64)" 
curl --location --request GET "https://api.dataforseo.com/v3/serp/google/search_by_image/tasks_ready" \
--header "Authorization: Basic ${cred}"  \
--header "Content-Type: application/json" \
--data-raw ''
```

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
try {
	// Instead of 'login' and 'password' use your credentials from https://app.dataseo.com/api-access
	$client = new RestClient($api_url, null, 'login', 'password');
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
	exit();
}
try {
	// using this method you can get a list of completed tasks
	// GET /v3/serp/google/search_by_image/tasks_ready
	// in addition to 'google' and 'search_by_image' you can also set other search engine and type parameters
	// the full list of possible parameters is available in documentation
	$result = $client->get('/v3/serp/google/search_by_image/tasks_ready');
	print_r($result);
	// do something with result
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
}
$client = null;
?>
```

LANGUAGE: python
CODE:
```
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip
client = RestClient("login", "password")
# using this method you can get a list of completed tasks
# GET /v3/serp/google/search_by_image/tasks_ready
# the full list of possible parameters is available in documentation
response = client.get("/v3/serp/google/search_by_image/tasks_ready")

```

----------------------------------------

TITLE: Fetch Trustpilot Reviews Tasks Ready (JavaScript & C#)
DESCRIPTION: Examples for fetching a list of completed Trustpilot review tasks using the DataForSeo API. Includes authentication, making the GET request, and processing the JSON response. The JavaScript example uses Axios, while the C# example uses HttpClient.

SOURCE: https://docs.dataforseo.com/v3/business_data/trustpilot/reviews/tasks_ready

LANGUAGE: javascript
CODE:
```
const axios = require('axios');

axios({
    method: 'get',
    url: 'https://api.dataforseo.com/v3/business_data/trustpilot/reviews/tasks_ready',
    auth: {
        username: 'login',
        password: 'password'
    },
    headers: {
        'content-type': 'application/json'
    }
}).then(function (response) {
    var result = response['data']['tasks'][0]['result'];
    // Result data
    console.log(result);
}).catch(function (error) {
    console.log(error);
});

```

LANGUAGE: csharp
CODE:
```
using Newtonsoft.Json;
using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace DataForSeoDemos
{
    public static partial class Demos
    {
        public static async Task business_data_trustpilot_reviews_tasks_ready()
        {
            var httpClient = new HttpClient
            {
                BaseAddress = new Uri("https://api.dataforseo.com/"),
                // Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
                DefaultRequestHeaders = { Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(Encoding.ASCII.GetBytes("login:password"))) }
            };
            // using this method you can get a list of completed tasks
            // GET /v3/business_data/trustpilot/reviews/tasks_ready
            var response = await httpClient.GetAsync("/v3/business_data/trustpilot/reviews/tasks_ready");
            var result = JsonConvert.DeserializeObject<dynamic>(await response.Content.ReadAsStringAsync());
            // you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
            if (result.status_code == 20000)
            {
                // do something with result
                Console.WriteLine(result);
            }
            else
                Console.WriteLine($"error. Code: {result.status_code} Message: {result.status_message}");
        }
    }
}

```

----------------------------------------

TITLE: Get Google Trends Explore Completed Tasks Examples
DESCRIPTION: Demonstrates how to fetch completed tasks for Google Trends Explore using different programming languages. These examples show the common pattern of authenticating with API credentials and making a GET request to the relevant endpoint.

SOURCE: https://docs.dataforseo.com/v3/keywords_data/google_trends/explore/tasks_ready

LANGUAGE: bash
CODE:
```
# Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access 
login="login" 
password="password" 
cred="$(printf ${login}:${password} | base64)" 
curl --location --request GET "https://api.dataforseo.com/v3/keywords_data/google_trends/explore/tasks_ready" \
--header "Authorization: Basic ${cred}"  \
--header "Content-Type: application/json"  \

```

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
try {
	// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
	$client = new RestClient($api_url, null, 'login', 'password');
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}n";
	print "Error code: {$e->getCode()}n";
	print "Message: {$e->getMessage()}n";
	print  $e->getTraceAsString();
	echo "\n";
	exit();
}
try {
	// using this method you can get a list of completed tasks
	// GET /v3/keywords_data/google_trends/explore/tasks_ready
	// in addition to 'explore' you can also set other parameters
	// the full list of possible parameters is available in documentation
	$result = $client->get('/v3/keywords_data/google_trends/explore/tasks_ready');
	print_r($result);
	// do something with result
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}n";
	print "Error code: {$e->getCode()}n";
	print "Message: {$e->getMessage()}n";
	print  $e->getTraceAsString();
	echo "\n";
}
$client = null;
?>

```

LANGUAGE: python
CODE:
```
from random import Random
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip

client = RestClient("login", "password")
# using this method you can get a list of completed tasks
# GET /v3/keywords_data/google_trends/explore/tasks_ready
# in addition to 'explore' you can also set other parameters
# the full list of possible parameters is available in documentation
response = client.get("/v3/keywords_data/google_trends/explore/tasks_ready")

```

----------------------------------------

TITLE: Live YouTube Comments Advanced Python Client Example
DESCRIPTION: Example of using the DataForSEO Python client library to retrieve live YouTube comments. Includes setup, API call, and response handling.

SOURCE: https://docs.dataforseo.com/v3/serp/youtube/video_comments/live/advanced

LANGUAGE: python
CODE:
```
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip
client = RestClient("login", "password")
post_data = dict()
# You can set only one task at a time
post_data[len(post_data)] = dict(
language_code="en",
location_code=2840,
video_id="vQXvyV0zIP4"
)
# POST /v3/serp/youtube/video_comments/live/advanced
# in addition to 'youtube' and 'video_comments' you can also set other search engine and type parameters
# the full list of possible parameters is available in documentation
response = client.post("/v3/serp/youtube/video_comments/live/advanced", post_data)
# you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
if response["status_code"] == 20000:
print(response)

```

----------------------------------------

TITLE: Set Yahoo Organic SERP Tasks (Python)
DESCRIPTION: Python examples for setting Yahoo Organic SERP tasks. Demonstrates a simple task setup with language, location, and keyword, and a task setup with additional parameters like priority.

SOURCE: https://docs.dataforseo.com/v3/serp/yahoo/organic/task_post

LANGUAGE: python
CODE:
```
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip

client = RestClient("login", "password")

post_data = dict()
# example #1 - a simple way to set a task
# this way requires you to specify a location, a language of search, and a keyword.
post_data[len(post_data)] = dict(
    language_code="en",
    location_code=2840,
    keyword="albert einstein"
)
# example #2 - a way to set a task with additional parameters
# high priority allows us to complete a task faster, but you will be charged more.

```

----------------------------------------

TITLE: Get Finance Explore SERP Completed Tasks Examples
DESCRIPTION: Examples demonstrating how to retrieve completed task IDs for Finance Explore SERP using different programming languages and tools, by calling the DataForSEO API.

SOURCE: https://docs.dataforseo.com/v3/serp/google/finance_explore/tasks_ready

LANGUAGE: bash
CODE:
```
# Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access 
login="login" 
password="password"
cred="$(printf ${login}:${password} | base64)" 
curl --location --request GET "https://api.dataforseo.com/v3/serp/google/finance_explore/tasks_ready" \
--header "Authorization: Basic ${cred}"  \
--header "Content-Type: application/json" \
--data-raw ''
```

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
try {
	// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
	$client = new RestClient($api_url, null, 'login', 'password');
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
	exit();
}
try {
	// using this method you can get a list of completed tasks
	// GET /v3/serp/google/finance_explore/tasks_ready
	// in addition to 'google' and 'finance_explore' you can also set other search engine and type parameters
	// the full list of possible parameters is available in documentation
	$result = $client->get('/v3/serp/google/finance_explore/tasks_ready');
	print_r($result);
	// do something with result
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
}
$client = null;
?>
```

LANGUAGE: python
CODE:
```
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip
client = RestClient("login", "password")
# using this method you can get a list of completed tasks
# GET /v3/serp/google/finance_explore/tasks_ready
# in addition to 'google' and 'finance_explore' you can also set other search engine and type parameters
# the full list of possible parameters is available in documentation
response = client.get("/v3/serp/google/finance_explore/tasks_ready")

```

----------------------------------------

TITLE: Time Series Data Payload Example
DESCRIPTION: An example of the data payload structure, showing an array of objects. Each object represents a specific time period with a start date, end date, timestamp, a missing_data flag, and an array of associated values.

SOURCE: https://docs.dataforseo.com/v3/keywords_data/google_trends/explore/task_get

LANGUAGE: json
CODE:
```
[
  {
    "date_from": "2019-02-17",
    "date_to": "2019-02-23",
    "timestamp": 1550361600,
    "missing_data": false,
    "values": [
      64,
      49
    ]
  },
  {
    "date_from": "2019-02-24",
    "date_to": "2019-03-02",
    "timestamp": 1550966400,
    "missing_data": false,
    "values": [
      38,
      30
    ]
  },
  {
    "date_from": "2019-03-03",
    "date_to": "2019-03-09",
    "timestamp": 1551571200,
    "missing_data": false,
    "values": [
      55,
      38
    ]
  },
  {
    "date_from": "2019-03-10",
    "date_to": "2019-03-16",
    "timestamp": 1552176000,
    "missing_data": false,
    "values": [
      58,
      41
    ]
  },
  {
    "date_from": "2019-03-17",
    "date_to": "2019-03-23",
    "timestamp": 1552780800,
    "missing_data": false,
    "values": [
      62,
      38
    ]
  },
  {
    "date_from": "2019-03-24",
    "date_to": "2019-03-30",
    "timestamp": 1553385600,
    "missing_data": false,
    "values": [
      64,
      54
    ]
  },
  {
    "date_from": "2019-03-31",
    "date_to": "2019-04-06",
    "timestamp": 1553990400,
    "missing_data": false,
    "values": [
      65,
      46
    ]
  },
  {
    "date_from": "2019-04-07",
    "date_to": "2019-04-13",
    "timestamp": 1554595200,
    "missing_data": false,
    "values": [
      75,
      61
    ]
  },
  {
    "date_from": "2019-04-14",
    "date_to": "2019-04-20",
    "timestamp": 1555200000,
    "missing_data": false,
    "values": [
      57,
      36
    ]
  },
  {
    "date_from": "2019-04-21",
    "date_to": "2019-04-27",
    "timestamp": 1555804800,
    "missing_data": false,
    "values": [
      41,
      39
    ]
  },
  {
    "date_from": "2019-04-28",
    "date_to": "2019-05-04",
    "timestamp": 1556409600,
    "missing_data": false,
    "values": [
      66,
      49
    ]
  },
  {
    "date_from": "2019-05-05",
    "date_to": "2019-05-11",
    "timestamp": 1557014400,
    "missing_data": false,
    "values": [
      54,
      52
    ]
  },
  {
    "date_from": "2019-05-12",
    "date_to": "2019-05-18",
    "timestamp": 1557619200,
    "missing_data": false,
    "values": [
      72,
      49
    ]
  },
  {
    "date_from": "2019-05-19",
    "date_to": "2019-05-25",
    "timestamp": 1558224000,
    "missing_data": false,
    "values": [
      69,
      60
    ]
  },
  {
    "date_from": "2019-05-26",
    "date_to": "2019-06-01",
    "timestamp": 1558828800,
    "missing_data": false,
    "values": [
      71,
      60
    ]
  },
  {
    "date_from": "2019-06-02",
    "date_to": "2019-06-08",
    "timestamp": 1559433600,
    "missing_data": false,
    "values": [
      100,
      50
    ]
  },
  {
    "date_from": "2019-06-09",
    "date_to": "2019-06-15",
    "timestamp": 1560038400,
    "missing_data": false,
    "values": [
      74,
      50
    ]
  }
]
```

----------------------------------------

TITLE: Call Google Keyword Overview API
DESCRIPTION: Demonstrates how to fetch keyword overview data from Google using the DataForSEO V3 API. It includes examples for setting up the request with keywords, location, and language, and handling the API response. Dependencies include libraries for making HTTP requests (like `axios` for Node.js, `HttpClient` for C#) and JSON parsing.

SOURCE: https://docs.dataforseo.com/v3/dataforseo_labs/google/keyword_overview/live

LANGUAGE: python
CODE:
```
if response["status_code"] == 20000:
    print(response)
    # do something with result
else:
    print("error. Code: %d Message: %s" % (response["status_code"], response["status_message"]))

```

LANGUAGE: javascript
CODE:
```
const post_array = [];

post_array.push({
  "language_name": "English",
  "location_code": 2840,
  "include_serp_info": true,
  "keywords": ["iphone"]
});

const axios = require('axios');
axios({
  method: 'post',
  url: 'https://api.dataforseo.com/v3/dataforseo_labs/google/keyword_overview/live',
  auth: {
    username: 'login',
    password: 'password'
  },
  data: post_array,
  headers: {
    'content-type': 'application/json'
  }
}).then(function (response) {
  var result = response['data']['tasks'];
  // Result data
  console.log(result);
}).catch(function (error) {
  console.log(error);
});

```

LANGUAGE: csharp
CODE:
```
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace DataForSeoDemos
{
    public static partial class Demos
    {
        public static async Task dataforseo_labs_google_keyword_overview_live()
        {
            var httpClient = new HttpClient
            {
                BaseAddress = new Uri("https://api.dataforseo.com/"),
                // Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
                DefaultRequestHeaders = { Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(Encoding.ASCII.GetBytes("login:password"))) }
            };
            var postData = new List<object>();
            postData.Add(new
            {
                keywords = new[]
                {
                    "iphone"
                },
                location_name = "United States",
                language_name = "English"
            });
            // POST /v3/dataforseo_labs/google/keyword_overview/live
            // the full list of possible parameters is available in documentation

            var taskPostResponse = await httpClient.PostAsync("/v3/dataforseo_labs/google/keyword_overview/live", new StringContent(JsonConvert.SerializeObject(postData)));
            var result = JsonConvert.DeserializeObject<dynamic>(await taskPostResponse.Content.ReadAsStringAsync());
            // you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
            if (result.status_code == 20000)
            {
                // do something with result
                Console.WriteLine(result);
            }
            else
                Console.WriteLine($"error. Code: {result.status_code} Message: {result.status_message}");
        }
    }
}

```

----------------------------------------

TITLE: Create Google Images SERP Task Example 1
DESCRIPTION: Example payload for creating a Google Images SERP task with specific parameters like keyword, device, and OS. This demonstrates a basic task submission.

SOURCE: https://docs.dataforseo.com/v3/serp/google/images/task_post

LANGUAGE: json
CODE:
```
{
  "jsonrpc": "2.0",
  "method": "task_post",
  "params": {
    "se": "google",
    "se_type": "images",
    "language_code": "en",
    "location_code": 2840,
    "keyword": "albert enstein",
    "device": "desktop",
    "os": "windows"
  }
}
```

----------------------------------------

TITLE: Example: Live Google Finance Markets Advanced (Python)
DESCRIPTION: Demonstrates fetching live Google Finance market data using a Python client. It shows how to initialize the client with credentials and send a POST request with the required payload.

SOURCE: https://docs.dataforseo.com/v3/serp/google/finance_markets/live/advanced

LANGUAGE: python
CODE:
```
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip
client = RestClient("login", "password")
post_data = dict()
# You can set only one task at a time
post_data[len(post_data)] = dict(
location_code=2840,
language_name="English"
)
# POST /v3/serp/google/finance_markets/live/advanced
# in addition to 'google' and 'finance_markets' you can also set other search engine and type parameters
# the full list of possible parameters is available in documentation
response = client.post("/v3/serp/google/finance_markets/live/advanced", post_data)
# you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
if response["status_code"] == 20000:
print(response)
```

----------------------------------------

TITLE: Get DataForSEO API Status (C#)
DESCRIPTION: Provides a C# example using HttpClient to fetch the API status from the /v3/appendix/status endpoint. It includes authentication setup and deserializes the JSON response to check for errors.

SOURCE: https://docs.dataforseo.com/v3/appendix/status

LANGUAGE: csharp
CODE:
```
using Newtonsoft.Json;
using System;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace DataForSeoDemos
{
    public static partial class Demos
    {
        public static async Task appendix_status()
        {
            var httpClient = new HttpClient
            {
                BaseAddress = new Uri("https://api.dataforseo.com/"),
                // Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
                DefaultRequestHeaders = { Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(Encoding.ASCII.GetBytes("login:password"))) }
            };
            // using this method you can get information about current status
            // GET /v3/appendix/status
            var response = await httpClient.GetAsync("/v3/appendix/status");
            var result = JsonConvert.DeserializeObject(await response.Content.ReadAsStringAsync());
            // you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
            if (result.status_code == 20000)
            {
                // do something with result
                Console.WriteLine(result);
            }
            else
                Console.WriteLine($"error. Code: {result.status_code} Message: {result.status_message}");
        }
    }
}

```

----------------------------------------

TITLE: Get Keywords For Site Tasks Ready (PHP Example)
DESCRIPTION: This PHP script shows how to use the RestClient library to fetch completed tasks for the 'Keywords For Site' API. It includes error handling for API requests and demonstrates how to instantiate the client and make the GET request.

SOURCE: https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_site/tasks_ready

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
try {
	// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
	$client = new RestClient($api_url, null, 'login', 'password');
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
	exit();
}
try {
	// using this method you can get a list of completed tasks
	// GET /v3/keywords_data/google_ads/keywords_for_site/tasks_ready
	// in addition to 'keywords_for_site' you can also set other parameters
	// the full list of possible parameters is available in documentation
	$result = $client->get('/v3/keywords_data/google_ads/keywords_for_site/tasks_ready');
	print_r($result);
	// do something with result
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
}
$client = null;
?>
```

----------------------------------------

TITLE: Get Links using PHP
DESCRIPTION: Provides a PHP example for interacting with the DataForSEO v3 Links API. It includes setup for the RestClient, sending a POST request with link filtering parameters, and handling potential API errors.

SOURCE: https://docs.dataforseo.com/v3/on_page/links

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
$client = new RestClient($api_url, null, 'login', 'password');

$post_array = array();
// simple way to get a result
$post_array[] = array(
   "id" => "07281559-0695-0216-0000-c269be8b7592",
   "page_from" => "/apis/google-trends-api",
   "filters" => [
      ["dofollow", "=", true],
      "and",
      ["direction", "=", "external"]
   ],
   "limit" => 10
);
try {
   // POST /v3/on_page/links
   // the full list of possible parameters is available in documentation
   $result = $client->post('/v3/on_page/links', $post_array);
   print_r($result);
   // do something with post result
} catch (RestClientException $e) {
   echo "\n";
   print "HTTP code: {$e->getHttpCode()}\n";
   print "Error code: {$e->getCode()}\n";
   print "Message: {$e->getMessage()}\n";
   print  $e->getTraceAsString();
   echo "\n";
}
$client = null;
?>
```

----------------------------------------

TITLE: Fetch Google My Business Info via DataForSEO API (C#)
DESCRIPTION: This C# example demonstrates how to call the DataForSEO V3 API to get Google My Business information using HttpClient. It covers setting up the client with authentication, constructing the request body with location and keyword, sending the POST request, and deserializing the JSON response.

SOURCE: https://docs.dataforseo.com/v3/business_data/google/my_business_info/live

LANGUAGE: csharp
CODE:
```
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace DataForSeoDemos
{
    public static partial class Demos
    {
        public static async Task business_data_info_live()
        {
            var httpClient = new HttpClient
            {
                BaseAddress = new Uri("https://api.dataforseo.com/"),
                // Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
                DefaultRequestHeaders = { Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(Encoding.ASCII.GetBytes("login:password"))) }
            };
            var postData = new List<object>();
            // example #1 - a simple way to set a task
            // this way requires you to specify a location, a language of search, and a keyword.
            postData.Add(new
            {
                language_code = "en",
                location_code = 1023191,
                keyword = "RustyBrick, Inc."
            });
            // POST /v3/business_data/google/my_business_info/live
            var taskPostResponse = await httpClient.PostAsync("/v3/business_data/google/my_business_info/live", new StringContent(JsonConvert.SerializeObject(postData)));
            var result = JsonConvert.DeserializeObject(await taskPostResponse.Content.ReadAsStringAsync());
            // you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
            if (result.status_code == 20000)
            {
                // do something with result
                Console.WriteLine(result);
            }
            else
                Console.WriteLine($"error. Code: {result.status_code} Message: {result.status_message}");
        }
    }
}

```

----------------------------------------

TITLE: List Google Jobs Locations API Endpoint Examples
DESCRIPTION: This section provides code examples for accessing the dataforseo SERP API to retrieve a list of Google Jobs locations. It includes examples for Bash, PHP, and Python, demonstrating how to authenticate and make the GET request to the `/v3/serp/google/jobs/locations` endpoint.

SOURCE: https://docs.dataforseo.com/v3/serp/google/jobs/locations

LANGUAGE: APIDOC
CODE:
```
GET /v3/serp/google/jobs/locations
  Description: Retrieves a list of Google Jobs locations.
  Authentication: Requires Basic Authentication using 'login' and 'password' credentials, typically encoded in Base64 and passed via the 'Authorization' header.
  Headers:
    - Authorization: Basic <base64_encoded_credentials>
    - Content-Type: application/json
  Parameters: None directly in the URL for this specific endpoint, but API key/credentials are required for authentication.
  Returns: A JSON object containing a list of available job locations.
```

LANGUAGE: bash
CODE:
```
# Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
login="login"
password="password"
cred="$(printf ${login}:${password} | base64)"
curl --location --request GET "https://api.dataforseo.com/v3/serp/google/jobs/locations" \
--header "Authorization: Basic ${cred}" \
--header "Content-Type: application/json" \

```

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
try {
	// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
	$client = new RestClient($api_url, null, 'login', 'password');
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
	exit();
}
try {
	// using this method you can get a list of locations
	// GET /v3/serp/google/jobs/locations
	// the full list of possible parameters is available in documentation
	$result = $client->get('/v3/serp/google/jobs/locations');
	print_r($result);
	// do something with result
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
}
$client = null;
?>
```

LANGUAGE: python
CODE:
```
from random import Random
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip

client = RestClient("login", "password")
# using this method you can get a list of locations
# GET /v3/serp/google/jobs/locations
# the full list of possible parameters is available in documentation
response = client.get("/v3/serp/google/jobs/locations")

```

----------------------------------------

TITLE: Get Google Play Keywords (PHP)
DESCRIPTION: PHP example demonstrating how to use the RestClient to retrieve Google Play keywords. Shows task setup, API call, and error handling.

SOURCE: https://docs.dataforseo.com/v3/dataforseo_labs/google/keywords_for_app/live

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
$client = new RestClient($api_url, null, 'login', 'password');

$post_array = array();
// simple way to set a task
$post_array[] = array(
	"app_id" => "org.telegram.messenger",
	"language_name" => "English",
	"location_code" => 2840,
	"filters" => [
		["keyword_data.keyword_info.search_volume", ">=", 500]
	],
	"limit" => 10
);
try {
   // POST /v3/dataforseo_labs/google/keywords_for_app/live
   $result = $client->post('/v3/dataforseo_labs/google/keywords_for_app/live', $post_array);
   print_r($result);
   // do something with post result
} catch (RestClientException $e) {
   echo "\n";
   print "HTTP code: {$e->getHttpCode()}n";
   print "Error code: {$e->getCode()}n";
   print "Message: {$e->getMessage()}n";
   print  $e->getTraceAsString();
   echo "\n";
}
$client = null;
?>
```

----------------------------------------

TITLE: C#: Fetch Apple Keywords for App (DataForSEO Labs)
DESCRIPTION: This C# example demonstrates making a POST request to the DataForSEO Labs API for Apple keywords using `HttpClient` and `Newtonsoft.Json`. It covers setting up the HTTP client with basic authentication, constructing the request payload with parameters like `app_id`, `location_name`, `language_name`, and `filters`, and deserializing the JSON response.

SOURCE: https://docs.dataforseo.com/v3/dataforseo_labs/apple/keywords_for_app/live

LANGUAGE: C#
CODE:
```
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace DataForSeoDemos
{
    public static partial class Demos
    {
        public static async Task dataforseo_labs_apple_keywords_for_app_live()
        {
            var httpClient = new HttpClient
            {
                BaseAddress = new Uri("https://api.dataforseo.com/"),
                // Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
                DefaultRequestHeaders = { Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(Encoding.ASCII.GetBytes("login:password"))) }
            };
            var postData = new List<object>();
            postData.Add(new
            {
                app_id = "686449807",
                location_name = "United States",
                language_name = "English",
                filters = new object[]
                {
                    new object[] { "keyword_data.keyword_info.search_volume", ">=", 500 }
                },
                limit = 10
            });
            // POST /v3/dataforseo_labs/apple/keywords_for_app/live
            // the full list of possible parameters is available in documentation
            var taskPostResponse = await httpClient.PostAsync("/v3/dataforseo_labs/apple/keywords_for_app/live", new StringContent(JsonConvert.SerializeObject(postData)));
            var result = JsonConvert.DeserializeObject(await taskPostResponse.Content.ReadAsStringAsync());
            // you can find the full list of the response codes here https://docs.dataforseo.com/v3/appendix/errors
            if (result.status_code == 20000)
            {
                // do something with result
                Console.WriteLine(result);
            }
            else
                Console.WriteLine($"error. Code: {result.status_code} Message: {result.status_message}");
        }
    }
}

```

----------------------------------------

TITLE: Get Keywords For Site Tasks Ready (Python Example)
DESCRIPTION: This Python script demonstrates how to use the RestClient library to retrieve completed tasks for the 'Keywords For Site' API. It shows the basic usage of the client to make a GET request to the specified endpoint.

SOURCE: https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_site/tasks_ready

LANGUAGE: python
CODE:
```
from random import Random
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip

client = RestClient("login", "password")
# using this method you can get a list of completed tasks
# GET /v3/keywords_data/google_ads/keywords_for_site/tasks_ready
# in addition to 'keywords_for_site' you can also set other parameters
# the full list of possible parameters is available in documentation
response = client.get("/v3/keywords_data/google_ads/keywords_for_site/tasks_ready")

```

----------------------------------------

TITLE: Google Local Finder SERP Data Retrieval Methods
DESCRIPTION: Explains the two main methods for obtaining SERP results: the Live method for instant data and the Standard method for asynchronous, more affordable retrieval. It also covers notification options and task management.

SOURCE: https://docs.dataforseo.com/v3/serp/google/local_finder/overview

LANGUAGE: APIDOC
CODE:
```
Data Retrieval Methods:

Live Method:
  - Delivers instant results.
  - Does not require separate POST and GET requests.
  - Best for systems requiring real-time data.
  - Higher cost compared to the Standard method.
  - Example Endpoint: Google Local Finder SERP Advanced endpoint (Live)

Standard Method:
  - Delivers results after the system collects them (asynchronous).
  - Requires separate POST (task posting) and GET (task retrieval) requests.
  - More affordable than the Live method.
  - Task Posting Endpoint: https://docs.dataforseo.com/v3/serp/google/local_finder/task_post.md
  - Task GET Endpoint (Advanced): https://docs.dataforseo.com/v3/serp/google/local_finder/task_get/advanced.md

Notification Options (Standard Method):
  - pingback_url: Notifies upon task completion.
  - postback_url: Sends results directly upon task completion (requires specifying 'advanced' or 'html' function).

Task Management (Standard Method without Notifications):
  - Tasks Ready Endpoint: Retrieves a list of IDs for completed tasks that have not yet been collected.
  - Task GET Endpoint: Retrieves results for specific task IDs.
  - Related Help Article: https://dataforseo.com/help-center/completed-tasks
```

----------------------------------------

TITLE: Get Keywords For Keywords Tasks - API Examples
DESCRIPTION: This endpoint provides a list of completed tasks for the 'Keywords For Keywords' feature. Users can obtain task IDs to collect results using the 'Task GET' endpoint. The examples demonstrate how to authenticate and make the GET request using cURL, PHP, and Python.

SOURCE: https://docs.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready

LANGUAGE: curl
CODE:
```
# Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
login="login"
password="password"
cred="$(printf ${login}:${password} | base64)"
curl --location --request GET "https://api.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready" \
--header "Authorization: Basic ${cred}" \
--header "Content-Type: application/json" \
--data-raw ''
```

LANGUAGE: php
CODE:
```
<?php
// You can download this file from here https://cdn.dataforseo.com/v3/examples/php/php_RestClient.zip
require('RestClient.php');
$api_url = 'https://api.dataforseo.com/';
try {
	// Instead of 'login' and 'password' use your credentials from https://app.dataforseo.com/api-access
	$client = new RestClient($api_url, null, 'login', 'password');
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
	exit();
}
try {
	// using this method you can get a list of completed tasks
	// GET /v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready
	// in addition to 'keywords_for_keywords' you can also set other parameters
	// the full list of possible parameters is available in documentation
	$result = $client->get('/v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready');
	print_r($result);
	// do something with result
} catch (RestClientException $e) {
	echo "\n";
	print "HTTP code: {$e->getHttpCode()}\n";
	print "Error code: {$e->getCode()}\n";
	print "Message: {$e->getMessage()}\n";
	print  $e->getTraceAsString();
	echo "\n";
}
$client = null;
?>
```

LANGUAGE: python
CODE:
```
from random import Random
from client import RestClient
# You can download this file from here https://cdn.dataforseo.com/v3/examples/python/python_Client.zip

client = RestClient("login", "password")
# using this method you can get a list of completed tasks
# GET /v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready
# in addition to 'keywords_for_keywords' you can also set other parameters
# the full list of possible parameters is available in documentation
response = client.get("/v3/keywords_data/google_ads/keywords_for_keywords/tasks_ready")

```